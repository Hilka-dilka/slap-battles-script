-- // Full ESP Menu (Fixed new player ESP + cycle color/material buttons) //

local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- // Settings
local settings = {
    enabled = false,
    seeThroughWalls = false,
    color = Color3.fromRGB(0, 255, 0),
    material = "ForceField",
    transparency = 0.4,
    maxDistance = 1000
}
local materials = {"Neon", "ForceField", "Glass", "Metal"}
local presetColors = {
    {name = "Green", color = Color3.fromRGB(0, 255, 0)},
    {name = "Red", color = Color3.fromRGB(255, 0, 0)},
    {name = "Blue", color = Color3.fromRGB(0, 0, 255)},
    {name = "White", color = Color3.fromRGB(255, 255, 255)},
    {name = "Yellow", color = Color3.fromRGB(255, 255, 0)},
    {name = "Orange", color = Color3.fromRGB(255, 165, 0)},
    {name = "Purple", color = Color3.fromRGB(128, 0, 128)},
    {name = "Cyan", color = Color3.fromRGB(0, 255, 255)},
    {name = "Pink", color = Color3.fromRGB(255, 105, 180)},
    {name = "Lime", color = Color3.fromRGB(50, 205, 50)}
}
local currentColorIndex = 1
local currentMaterialIndex = 2
local autoUpdateEnabled = true
local highlights = {}

--------------------------------------------------------
--                   GUI CREATION
--------------------------------------------------------
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "EspMenu"
screenGui.DisplayOrder = 10
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 280)
frame.Position = UDim2.new(0.05, 0, 0.05, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.Parent = screenGui
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = frame

local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleBar.BorderSizePixel = 0
titleBar.Parent = frame

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0.8, 0, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Text = "ESP Menu"
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 18
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -30, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Text = "X"
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 16
closeButton.Parent = titleBar

local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -20, 1, -40)
contentFrame.Position = UDim2.new(0, 10, 0, 40)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = frame

local uiListLayout = Instance.new("UIListLayout")
uiListLayout.Padding = UDim.new(0, 10)
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayout.Parent = contentFrame

--------------------------------------------------------
--                   BUTTONS
--------------------------------------------------------
local function createButton(text)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Text = text
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 16
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 5)
    corner.Parent = btn
    btn.Parent = contentFrame
    return btn
end

local toggleEspButton = createButton("Enable ESP: Off")
local toggleSeeThroughButton = createButton("See Through Walls: Off")
local colorButton = createButton("Color: Green")
colorButton.BackgroundColor3 = settings.color
local materialButton = createButton("Material: ForceField")
local autoUpdateButton = createButton("Auto Update: On")

--------------------------------------------------------
--                   SLIDER
--------------------------------------------------------
local maxDistanceFrame = Instance.new("Frame")
maxDistanceFrame.Size = UDim2.new(1, 0, 0, 30)
maxDistanceFrame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
maxDistanceFrame.Parent = contentFrame
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 5)
corner.Parent = maxDistanceFrame

local maxDistanceLabel = Instance.new("TextLabel")
maxDistanceLabel.Size = UDim2.new(0.6, 0, 1, 0)
maxDistanceLabel.BackgroundTransparency = 1
maxDistanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
maxDistanceLabel.Text = "Max Distance: " .. settings.maxDistance
maxDistanceLabel.Font = Enum.Font.SourceSans
maxDistanceLabel.TextSize = 16
maxDistanceLabel.TextXAlignment = Enum.TextXAlignment.Left
maxDistanceLabel.Parent = maxDistanceFrame

local maxDistanceSlider = Instance.new("TextButton")
maxDistanceSlider.Size = UDim2.new(0.4, -10, 0, 20)
maxDistanceSlider.Position = UDim2.new(0.6, 5, 0.5, -10)
maxDistanceSlider.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
maxDistanceSlider.Text = ""
maxDistanceSlider.Parent = maxDistanceFrame
local sliderCorner = Instance.new("UICorner")
sliderCorner.CornerRadius = UDim.new(0, 5)
sliderCorner.Parent = maxDistanceSlider

--------------------------------------------------------
--                   ESP FUNCTIONS
--------------------------------------------------------
local function isVisible(targetChar)
    if settings.seeThroughWalls then
        return targetChar and targetChar:FindFirstChild("Head")
    end
    local localChar = player.Character
    if not (targetChar and localChar) then return false end
    local targetHead = targetChar:FindFirstChild("Head")
    local localHead = localChar:FindFirstChild("Head")
    if not (targetHead and localHead) then return false end
    local distance = (targetHead.Position - localHead.Position).Magnitude
    if distance > settings.maxDistance then return false end
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {localChar, targetChar}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    local rayResult = workspace:Raycast(localHead.Position, (targetHead.Position - localHead.Position).Unit * distance, raycastParams)
    return not rayResult
end

local function updateHighlightProperties(highlight)
    highlight.FillColor = settings.color
    highlight.OutlineColor = settings.color
    highlight.FillTransparency = settings.material == "ForceField" and 0.5 or settings.transparency
    highlight.OutlineTransparency = 0
end

local function updatePlayerESP(plr)
    if not plr.Character then return end
    if not highlights[plr] then
        local highlight = Instance.new("Highlight")
        highlight.Name = plr.Name .. "_ESP"
        highlight.Parent = CoreGui
        highlights[plr] = highlight
    end
    local highlight = highlights[plr]
    local visible = isVisible(plr.Character)
    updateHighlightProperties(highlight)
    highlight.Enabled = settings.enabled and visible
    highlight.Adornee = settings.enabled and visible and plr.Character or nil
end

local function applyEspToAllPlayers()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player then
            updatePlayerESP(plr)
        end
    end
end

--------------------------------------------------------
--                   PLAYER EVENTS
--------------------------------------------------------
Players.PlayerAdded:Connect(function(plr)
    if plr ~= player then
        plr.CharacterAdded:Connect(function()
            task.wait(1)
            if settings.enabled then
                updatePlayerESP(plr)
            end
        end)
        if plr.Character and settings.enabled then
            task.wait(1)
            updatePlayerESP(plr)
        end
    end
end)

Players.PlayerRemoving:Connect(function(plr)
    if highlights[plr] then
        highlights[plr]:Destroy()
        highlights[plr] = nil
    end
end)

player.CharacterAdded:Connect(function()
    task.wait(1)
    if settings.enabled then
        applyEspToAllPlayers()
    end
end)

--------------------------------------------------------
--                   BUTTON LOGIC
--------------------------------------------------------
toggleEspButton.MouseButton1Click:Connect(function()
    settings.enabled = not settings.enabled
    toggleEspButton.Text = "Enable ESP: " .. (settings.enabled and "On" or "Off")
    if settings.enabled then
        applyEspToAllPlayers()
    else
        for _, h in pairs(highlights) do h.Enabled = false end
    end
end)

toggleSeeThroughButton.MouseButton1Click:Connect(function()
    settings.seeThroughWalls = not settings.seeThroughWalls
    toggleSeeThroughButton.Text = "See Through Walls: " .. (settings.seeThroughWalls and "On" or "Off")
    if settings.enabled then
        applyEspToAllPlayers()
    end
end)

colorButton.MouseButton1Click:Connect(function()
    currentColorIndex = (currentColorIndex % #presetColors) + 1
    local newColor = presetColors[currentColorIndex]
    settings.color = newColor.color
    colorButton.Text = "Color: " .. newColor.name
    colorButton.BackgroundColor3 = newColor.color
    if settings.enabled then
        applyEspToAllPlayers()
    end
end)

materialButton.MouseButton1Click:Connect(function()
    currentMaterialIndex = (currentMaterialIndex % #materials) + 1
    settings.material = materials[currentMaterialIndex]
    materialButton.Text = "Material: " .. settings.material
    if settings.enabled then
        applyEspToAllPlayers()
    end
end)

autoUpdateButton.MouseButton1Click:Connect(function()
    autoUpdateEnabled = not autoUpdateEnabled
    autoUpdateButton.Text = "Auto Update: " .. (autoUpdateEnabled and "On" or "Off")
end)

-- dragging
local dragging, dragStart, startPos = false, nil, nil
titleBar.InputBegan:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = i.Position
        startPos = frame.Position
    end
end)
titleBar.InputEnded:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)
UserInputService.InputChanged:Connect(function(i)
    if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = i.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

closeButton.MouseButton1Click:Connect(function()
    screenGui.Enabled = false
    settings.enabled = false
    for _, h in pairs(highlights) do h.Enabled = false end
end)

print("✅ ESP Menu loaded — Fixed new player ESP, added color/material cycling!")
